# A2A World Platform - Promtail Configuration
# Log collection and forwarding to Loki

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log

  # Docker container logs
  - job_name: containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'

  # A2A World API logs
  - job_name: a2a-api
    static_configs:
      - targets:
          - localhost
        labels:
          job: a2a-api
          service: api
          environment: production
          __path__: /var/log/a2a-world/api*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            module: module
            request_id: request_id
            user_id: user_id
            method: method
            path: path
            status: status
            duration: duration
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          module:
          method:
          status:
      - drop:
          expression: '.*health.*'
          older_than: 24h

  # A2A World Frontend logs
  - job_name: a2a-frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: a2a-frontend
          service: frontend
          environment: production
          __path__: /var/log/a2a-world/frontend*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            component: component
            user_id: user_id
            session_id: session_id
            page: page
            action: action
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          component:
          page:
          action:

  # A2A World Agents logs
  - job_name: a2a-agents
    static_configs:
      - targets:
          - localhost
        labels:
          job: a2a-agents
          service: agents
          environment: production
          __path__: /var/log/a2a-world/agents*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            agent_type: agent_type
            agent_id: agent_id
            task_id: task_id
            operation: operation
            duration: duration
            status: status
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          agent_type:
          operation:
          status:
      - metrics:
          agent_task_duration:
            type: Histogram
            description: "Duration of agent tasks"
            source: duration
            config:
              buckets: [0.1, 0.5, 1, 2, 5, 10, 30, 60, 300]

  # PostgreSQL logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: database
          environment: production
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'
      - labels:
          level:
          pid:

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: cache
          environment: production
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>.) (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '02 Jan 2006 15:04:05.000'
      - labels:
          level:
          role:

  # NATS logs
  - job_name: nats
    static_configs:
      - targets:
          - localhost
        labels:
          job: nats
          service: messaging
          environment: production
          __path__: /var/log/nats/*.log
    pipeline_stages:
      - regex:
          expression: '^\[(?P<pid>\d+)\] (?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}\.\d{6}) \[(?P<level>\w+)\] (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05.000000'
      - labels:
          level:

  # Nginx/Traefik access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          service: proxy
          environment: production
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      - labels:
          method:
          status:
          path:
      - metrics:
          http_requests_total:
            type: Counter
            description: "Total HTTP requests"
            config:
              action: inc
          http_request_size_bytes:
            type: Histogram
            description: "HTTP request size in bytes"
            source: bytes_sent
            config:
              buckets: [100, 1000, 10000, 100000, 1000000]

  # Security logs
  - job_name: security
    static_configs:
      - targets:
          - localhost
        labels:
          job: security
          service: security
          environment: production
          __path__: /var/log/auth.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
      - labels:
          service:
          hostname:
      - drop:
          expression: '.*CRON.*'

  # Application error logs with enhanced parsing
  - job_name: application-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: application-errors
          severity: error
          environment: production
          __path__: /var/log/a2a-world/*error*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            error_type: error_type
            stack_trace: stack_trace
            request_id: request_id
            user_id: user_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          error_type:
      - metrics:
          error_count:
            type: Counter
            description: "Total application errors"
            config:
              action: inc

# Limits configuration
limits_config:
  readline_rate: 10000
  readline_burst: 20000